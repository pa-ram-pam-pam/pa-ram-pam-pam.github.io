{"version":3,"sources":["app/actionTypes/actionTypes.js","app/unsplash.js","app/constants/constants.js","app/actionCreators/actionCreators.js","app/selectors/selectors.js","app/components/PhotoStatistics.js","app/components/SmallPhoto.js","app/components/ButtonAuth.js","app/containers/BlockOfSmallPhotos.js","app/components/ButtonLike.js","app/components/BigPhoto.js","app/containers/BlockOfBigPhoto.js","app/containers/Auth.js","app/containers/PreAuthorization.js","app/containers/App.js","app/reducers/reducers.js","index.js"],"names":["actionTypes","LOAD_PHOTOS","LOAD_ONE_PHOTO","SHOW_BIG_PHOTO","SET_ERROR","TOGGLE_LIKE_PHOTO","TOGGLE_AUTHORIZATION","FROM_URL","unsplash","Unsplash","accessKey","secret","callbackUrl","loadPhotos","dispatch","getState","counter","search","photos","then","toJson","json","createActionLoadPhotos","catch","err","createActionSetError","createActionToggleLikePhoto","id","type","payload","createActionToggleAuthorization","fromUrl","createActionFromUrl","results","createActionLoadOnePhoto","getPageYReselected","createSelector","state","pageY","getMapReselected","photoMap","getAuthorizedReselected","authorized","getFromUrlReselected","PhotoStatiscs","photo","user","name","authorLink","links","html","created_at","likes","href","SmallPhoto","selectPhoto","description","url","urls","small","key","to","onClick","window","pageYOffset","src","alt","PhotoStatistics","ButtonAuth","useState","redirect","setRedirect","onClickAuthHandler","connect","createActionShowMeBigPhoto","handleScroll","useCallback","ev","innerHeight","document","documentElement","scrollTop","offsetHeight","preventDefault","useEffect","scrollTo","addEventListener","removeEventListener","undefined","size","content","values","value","push","onScroll","target","blur","ButtonLike","liked","handleClickButton","BigPhoto","toggleLikePhoto","liked_by_user","regular","get","unlikePhoto","likePhoto","loadOnePhoto","getPhoto","useParams","fromPhotoId","localStorage","getItem","code","location","split","auth","userAuthentication","res","setBearerToken","access_token","setItem","authenticationUrl","getAuthenticationUrl","assign","path","component","PreAutorization","Auth","BlockOfSmallPhotos","BlockOfBigPhoto","from","reducers","action","Map","set","newMap","map","elem","oldMap","merged","errMessage","newArr","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4af4f0e5.chunk.js","sourcesContent":["const actionTypes = {\r\n  LOAD_PHOTOS: 'LOAD_PHOTOS',\r\n  LOAD_ONE_PHOTO: 'LOAD_ONE_PHOTO',\r\n  SHOW_BIG_PHOTO: 'SHOW_BIG_PHOTO',\r\n  SET_ERROR: 'SET_ERROR',\r\n  TOGGLE_LIKE_PHOTO: 'TOGGLE_LIKE_PHOTO',\r\n  TOGGLE_AUTHORIZATION: 'TOGGLE_AUTHORIZATION',\r\n  FROM_URL: 'FROM_URL',\r\n};\r\n\r\nexport default actionTypes;\r\n","import { ACCESS_KEY, SECRET_KEY, CALLBACK_URL } from './constants/constants'\r\nimport Unsplash from 'unsplash-js'\r\n\r\n\r\nexport const unsplash = new Unsplash({\r\n  accessKey: ACCESS_KEY,\r\n  secret: SECRET_KEY,\r\n  callbackUrl: CALLBACK_URL,\r\n\r\n});\r\n","export const NUMBER_OF_UPLOADED_PHOTOS = 10\r\n\r\nexport const ACCESS_KEY = `KJOvYEYwLUqBqwO2elNDQlVbvpovCUF0gxnLu9Uql6M`;\r\n\r\nexport const SECRET_KEY = `oY014JiJh1zZyhhd9ngAWmLMB0RDfOBbVEH2ghladaA`;\r\n\r\nexport const PHOTO_THEME = `cats`;\r\n\r\nexport const CALLBACK_URL = `https://pa-ram-pam-pam.github.io/auth`;\r\n\r\n// export const CALLBACK_URL = `http://localhost:3000/auth`;","import actionTypes from '../actionTypes/actionTypes';\r\nimport { toJson } from 'unsplash-js';\r\nimport { NUMBER_OF_UPLOADED_PHOTOS, PHOTO_THEME } from '../constants/constants';\r\nimport { unsplash } from '../unsplash';\r\n\r\nconst { LOAD_PHOTOS, LOAD_ONE_PHOTO, SET_ERROR, SHOW_BIG_PHOTO, TOGGLE_LIKE_PHOTO, TOGGLE_AUTHORIZATION, FROM_URL } = actionTypes;\r\n\r\nexport const toggleLikePhoto = (id) => {\r\n  return function (dispatch, getState) {\r\n    const photo = getState().photoMap.get(id)\r\n    if (photo.liked_by_user) {\r\n      unsplash.photos.unlikePhoto(id)\r\n          .then(toJson)\r\n          .then(() => {\r\n            dispatch(createActionToggleLikePhoto(id))\r\n          });\r\n    } else {\r\n      unsplash.photos.likePhoto(id)\r\n          .then(toJson)\r\n          .then(() => {\r\n            dispatch(createActionToggleLikePhoto(id))\r\n          });\r\n    }\r\n  };\r\n}\r\n\r\nexport const loadPhotos = () => {\r\n  return function (dispatch, getState) {\r\n    const counter = ++getState().counter;\r\n\r\n    unsplash.search\r\n      .photos(PHOTO_THEME, counter, NUMBER_OF_UPLOADED_PHOTOS)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        dispatch(createActionLoadPhotos(json));\r\n      })\r\n      .catch(function (err) {\r\n        dispatch(createActionSetError());\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadOnePhoto = (id) => {\r\n  return function (dispatch) {\r\n    unsplash.photos.getPhoto(id)\r\n        .then(toJson)\r\n        .then((json) => {\r\n          dispatch(createActionLoadOnePhoto(json));\r\n        })\r\n        .catch(function (err) {\r\n          dispatch(createActionSetError());\r\n        });\r\n  };\r\n};\r\n\r\nexport const createActionShowMeBigPhoto = (pageY) => {\r\n  return {\r\n    type: SHOW_BIG_PHOTO,\r\n    pageY,\r\n  };\r\n};\r\n\r\nexport const createActionToggleLikePhoto = (id) => {\r\n  return {\r\n    type: TOGGLE_LIKE_PHOTO,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const createActionToggleAuthorization = (fromUrl) => {\r\n  return {\r\n    type: TOGGLE_AUTHORIZATION,\r\n    payload: fromUrl,\r\n  };\r\n};\r\n\r\nexport const createActionFromUrl = (fromUrl) => {\r\n  return {\r\n    type: FROM_URL,\r\n    payload: fromUrl,\r\n  };\r\n};\r\nconst createActionLoadPhotos = (json) => {\r\n  return {\r\n    type: LOAD_PHOTOS,\r\n    payload: json.results,\r\n  };\r\n};\r\n\r\nconst createActionLoadOnePhoto = (json) => {\r\n  return {\r\n    type: LOAD_ONE_PHOTO,\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const createActionSetError = (err) => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getPhotoMap = (state) => state.photoMap;\r\n\r\nconst getPageY = (state) => state.pageY;\r\n\r\nconst getAuthorized = (state) => state.authorized;\r\n\r\nconst getFromUrl = (state) => state.fromUrl;\r\n\r\n\r\nexport const getPageYReselected = createSelector (getPageY, state => state)\r\n\r\nexport const getMapReselected = createSelector (getPhotoMap, state => state)\r\n\r\nexport const getAuthorizedReselected = createSelector (getAuthorized, state => state)\r\n\r\nexport const getFromUrlReselected = createSelector (getFromUrl, state => state)","import React from 'react';\r\n\r\nconst PhotoStatiscs = ({ photo }) => {\r\n  const { user: { name, links: { html: { authorLink } } }, created_at, likes } = photo;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Автор:\r\n        <a href={authorLink}>{name}</a>\r\n      </div>\r\n      <div>Дата: {created_at}</div>\r\n      <div>Лайков: {likes}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoStatiscs;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PhotoStatistics from '../components/PhotoStatistics';\r\n\r\nconst SmallPhoto = ({ photo, selectPhoto }) => {\r\n  const {\r\n    id,\r\n    description,\r\n    urls: { small: url },\r\n  } = photo;\r\n\r\n  const handlerOnClick = () => {\r\n    selectPhoto(window.pageYOffset); \r\n  }\r\n  return (\r\n    <div key={id}>\r\n      <Link\r\n        to={`/view/` + id}\r\n        onClick={handlerOnClick}\r\n      >\r\n        <img src={url} alt={description}/>\r\n      </Link>\r\n      <PhotoStatistics photo={photo} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SmallPhoto","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst ButtonAuth = ({authorized, createActionToggleAuthorization, id, createActionFromUrl}) => {\r\n    const [redirect, setRedirect] = useState()\r\n    const onClickAuthHandler = () => {\r\n        if (authorized) {\r\n            createActionToggleAuthorization()\r\n        } else {\r\n            createActionFromUrl(id)\r\n            setRedirect(true)\r\n        }\r\n    }\r\n    if (redirect) {\r\n        return (\r\n            <Redirect to={`/preauth`}/>\r\n        );}\r\n\r\n    if (authorized) return (\r\n        <button onClick={onClickAuthHandler}>Выйти</button>\r\n    )\r\n    else {\r\n        return (<button onClick={onClickAuthHandler}>Авторизоваться</button>)\r\n    }\r\n}\r\n\r\nexport default ButtonAuth","import React, {useCallback, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    loadPhotos,\r\n    createActionShowMeBigPhoto,\r\n    createActionToggleAuthorization,\r\n    createActionFromUrl\r\n} from '../actionCreators/actionCreators';\r\nimport {\r\n    getPageYReselected,\r\n    getMapReselected,\r\n    getAuthorizedReselected\r\n} from '../selectors/selectors';\r\nimport SmallPhoto from '../components/SmallPhoto';\r\nimport ButtonAuth from '../components/ButtonAuth';\r\n\r\nconst BlockOfSmallPhotos = ({loadPhotos, createActionShowMeBigPhoto, pageY, photoMap, authorized, createActionToggleAuthorization}) => {\r\n    const handleScroll = useCallback((ev) => {\r\n        if (\r\n            window.innerHeight + document.documentElement.scrollTop !==\r\n            document.documentElement.offsetHeight\r\n        ) {\r\n            return;\r\n        }\r\n        ev.preventDefault();\r\n        loadPhotos();\r\n    }, [loadPhotos]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, pageY);\r\n    }, [pageY]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(`scroll`, handleScroll);\r\n        return () => window.removeEventListener(`scroll`, handleScroll);\r\n    }, [handleScroll]);\r\n\r\n\r\n    const onClickHandler = (ev) => {\r\n        ev.preventDefault();\r\n        ev.target.blur();\r\n        loadPhotos();\r\n    };\r\n    if (photoMap.size === undefined) {\r\n        loadPhotos()\r\n        return null;}\r\n\r\n    let content = []\r\n    for (let value of photoMap.values()) {\r\n        content.push(<SmallPhoto key={value.id} photo={value} selectPhoto={createActionShowMeBigPhoto}/>);\r\n    }\r\n\r\n    return (\r\n        <div onScroll={loadPhotos}>\r\n            <ButtonAuth authorized={authorized} createActionToggleAuthorization={createActionToggleAuthorization}\r\n                        createActionFromUrl={createActionFromUrl}/>\r\n            {content}\r\n            <br/>\r\n            <button onClick={onClickHandler}>Загрузить еще фоточек</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pageY: getPageYReselected(state),\r\n        photoMap: getMapReselected(state),\r\n        authorized: getAuthorizedReselected(state),\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadPhotos: () => dispatch(loadPhotos()),\r\n        createActionShowMeBigPhoto: (pageY) => dispatch(createActionShowMeBigPhoto(pageY)),\r\n        createActionToggleAuthorization: () => dispatch(createActionToggleAuthorization()),\r\n        createActionFromUrl: (id) => dispatch(createActionFromUrl(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockOfSmallPhotos);\r\n","import React from 'react';\r\n\r\nconst ButtonLike = ({liked, handleClickButton}) => {\r\n  if (liked) {\r\n      return (\r\n          <button onClick={handleClickButton}>Убрать лайк</button>\r\n      )\r\n  }\r\n  else {\r\n      return (\r\n      <button onClick={handleClickButton}>Поставить лайк</button>)\r\n  }\r\n}\r\n\r\nexport default ButtonLike","import React from 'react';\r\nimport PhotoStatiscs from './PhotoStatistics';\r\nimport {Link} from 'react-router-dom';\r\nimport ButtonLike from './ButtonLike'\r\nimport ButtonAuth from './ButtonAuth';\r\n\r\nconst BigPhoto = ({\r\n                      id,\r\n                      toggleLikePhoto,\r\n                      photo,\r\n                      authorized,\r\n                      createActionToggleAuthorization,\r\n                      createActionFromUrl\r\n                  }) => {\r\n\r\n    const liked = photo?.liked_by_user\r\n    const {description, urls: {regular: url}} = photo\r\n    const handleClickButton = () => {\r\n        toggleLikePhoto(id)\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Большая фоточка</h2>\r\n\r\n            <ButtonAuth id={id} authorized={authorized}\r\n                        createActionToggleAuthorization={createActionToggleAuthorization}\r\n                        createActionFromUrl={createActionFromUrl}/>\r\n\r\n            <PhotoStatiscs photo={photo}/>\r\n            <div>\r\n                <img src={url} alt={description}></img>\r\n                <br/>\r\n                {authorized ? (\r\n                    <ButtonLike liked={liked} handleClickButton={handleClickButton}/>) : null}\r\n            </div>\r\n            <Link to='/feed'> Назад </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BigPhoto;\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {\r\n    getAuthorizedReselected,\r\n    getMapReselected,\r\n} from '../selectors/selectors';\r\nimport {\r\n    createActionFromUrl,\r\n    createActionToggleAuthorization,\r\n    toggleLikePhoto, loadOnePhoto,\r\n    loadPhotos\r\n} from '../actionCreators/actionCreators';\r\nimport BigPhoto from '../components/BigPhoto';\r\n\r\nconst BlockOfBigPhoto = ({photoMap, authorized, createActionToggleAuthorization, createActionFromUrl, loadOnePhoto, toggleLikePhoto}) => {\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        if (photoMap.size === undefined) {\r\n            loadOnePhoto(id)\r\n        }\r\n    }, [id, loadOnePhoto, photoMap.size])\r\n\r\n    if (photoMap.size === undefined) {\r\n        return null\r\n    } else {\r\n        const photo = photoMap.get(id)\r\n        return (<div><BigPhoto photo={photo} id={id} authorized={authorized}\r\n                               createActionToggleAuthorization={createActionToggleAuthorization}\r\n                               createActionFromUrl={createActionFromUrl} toggleLikePhoto={toggleLikePhoto}/></div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photoMap: getMapReselected(state),\r\n        authorized: getAuthorizedReselected(state),\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleLikePhoto: (id) => dispatch(toggleLikePhoto(id)),\r\n        createActionToggleAuthorization: () => dispatch(createActionToggleAuthorization()),\r\n        createActionFromUrl: (id) => dispatch(createActionFromUrl(id)),\r\n        loadPhotos: (id) => dispatch(loadPhotos(id)),\r\n        loadOnePhoto: (id) => dispatch(loadOnePhoto(id)),\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockOfBigPhoto);\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {unsplash} from '../unsplash'\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createActionToggleAuthorization} from '../actionCreators/actionCreators';\r\n\r\nconst Auth = ({createActionToggleAuthorization}) => {\r\n    let url\r\n    const [redirect, setRedirect] = useState()\r\n    const fromPhotoId = localStorage.getItem(`fromPhotoId`);\r\n    if (fromPhotoId !== `null`) {\r\n        url = `/view/` + fromPhotoId\r\n\r\n    } else url = `/feed`\r\n    useEffect(() => {\r\n        const code = document.location.search.split(`code=`)[1];\r\n        if (code) unsplash.auth.userAuthentication(code).then(res => res.json()).then(json => {\r\n                createActionToggleAuthorization()\r\n                unsplash.auth.setBearerToken(json.access_token)\r\n                setRedirect(true)\r\n            }\r\n        )\r\n    })\r\n    if (redirect) {\r\n        localStorage.setItem(`fromPhotoId`, null)\r\n        return (<Redirect to={url}/>)\r\n    } else return null\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createActionToggleAuthorization: () => dispatch(createActionToggleAuthorization()),\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n","import {unsplash} from '../unsplash'\r\nimport {getFromUrlReselected} from '../selectors/selectors';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PreAutorization = ({fromUrl}) => {\r\n    if (fromUrl) localStorage.setItem(`fromPhotoId`, fromUrl)\r\n    const authenticationUrl = unsplash.auth.getAuthenticationUrl([`public`, `write_likes`]);\r\n        document.location.assign(authenticationUrl);\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fromUrl: getFromUrlReselected(state)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(PreAutorization);\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport BlockOfSmallPhotos from './BlockOfSmallPhotos';\nimport BlockOfBigPhoto from './BlockOfBigPhoto';\nimport Auth from './Auth'\nimport PreAutorization from './PreAuthorization'\n\nconst App = () => {\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route path='/preauth' component={PreAutorization}/>\n                    <Route path='/auth' component={Auth}/>\n                    <Route path='/feed' component={BlockOfSmallPhotos}/>\n                    <Route path='/view/:id' component={BlockOfBigPhoto}/>\n                    <Redirect from='/' to='/feed'/>\n                </Switch>\n            </Router>\n        </>\n    );\n};\n\nexport default connect(null, null)(App);\n\n","import actionTypes from '../actionTypes/actionTypes';\r\n\r\nconst reducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ONE_PHOTO:\r\n            const photoMap = new Map()\r\n            photoMap.set(action.payload.id, action.payload)\r\n            return {\r\n                ...state,\r\n                photoMap: photoMap\r\n            }\r\n\r\n        case actionTypes.LOAD_PHOTOS:\r\n            const newMap = action.payload.map((elem) => {\r\n                return [elem.id, elem]\r\n            })\r\n            const oldMap = [...state.photoMap]\r\n            const merged = new Map([...oldMap, ...newMap])\r\n            return {\r\n                ...state,\r\n                counter: ++state.counter,\r\n                errMessage: null,\r\n                photoMap: merged\r\n            };\r\n\r\n        case actionTypes.SHOW_BIG_PHOTO:\r\n            return {\r\n                ...state,\r\n                pageY: action.pageY,\r\n            };\r\n\r\n        case actionTypes.TOGGLE_AUTHORIZATION:\r\n            return {\r\n                ...state,\r\n                authorized: !state.authorized,\r\n            };\r\n        case actionTypes.FROM_URL:\r\n            return {\r\n                ...state,\r\n                fromUrl: action.payload,\r\n            };\r\n        case actionTypes.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errMessage: action.payload,\r\n            };\r\n\r\n        case actionTypes.TOGGLE_LIKE_PHOTO:\r\n            const newArr = new Map(state.photoMap)\r\n            const elem = newArr.get(action.payload)\r\n\r\n            if (elem.liked_by_user === false) {\r\n                elem.liked_by_user = true;\r\n                elem.likes = ++elem.likes;\r\n            } else {\r\n                elem.liked_by_user = false;\r\n                elem.likes = --elem.likes;\r\n            }\r\n            return {\r\n                ...state,\r\n                photoMap: newArr,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/containers/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './app/reducers/reducers';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  photoMap: [],\n  counter: 0,\n  errMessage: null,\n  pageY: 0,\n  authorized: false,\n  fromUrl: ``,\n};\n\nconst store = createStore(reducers, initialState, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(`root`)\n);\n"],"sourceRoot":""}