{"version":3,"sources":["app/actionTypes/actionTypes.js","app/unsplash.js","app/constants/constants.js","app/actionCreators/actionCreators.js","app/selectors/selectors.js","app/components/PhotoStatistics.js","app/components/SmallPhoto.js","app/containers/BlockOfSmallPhotos.js","app/containers/BlockOfBigPhoto.js","app/containers/Auth.js","app/containers/PreAuthorization.js","app/containers/ErrMessage.js","app/containers/App.js","app/reducers/reducers.js","index.js"],"names":["actionTypes","LOAD_PHOTOS","SELECT_PHOTO","SET_ERROR","TOGGLE_LIKE_PHOTO","unsplash","Unsplash","accessKey","secret","callbackUrl","loadPhotos","dispatch","getState","counter","search","photos","then","toJson","json","createActionLoadPhotos","catch","err","createActionSetError","type","payload","results","getPhotosReselected","createSelector","state","getPageYReselected","pageY","PhotoStatiscs","photo","user","name","authorLink","links","html","created_at","likes","href","SmallPhoto","selectPhoto","id","description","url","urls","small","key","to","onClick","window","pageYOffset","src","alt","PhotoStatistics","connect","createActionSelectPhoto","handleScroll","ev","innerHeight","document","documentElement","scrollTop","offsetHeight","preventDefault","useEffect","scrollTo","addEventListener","removeEventListener","length","onScroll","map","onClickCapture","target","blur","createActionToggleLikePhoto","useParams","find","item","useState","liked_by_user","liked","setLiked","Button","likePhoto","unlikePhoto","regular","code","location","split","auth","userAuthentication","res","setBearerToken","access_token","PreAutorization","authenticationUrl","getAuthenticationUrl","assign","errMessage","console","log","path","component","Auth","BlockOfSmallPhotos","BlockOfBigPhoto","from","reducers","action","unatedArr","concat","newArr","elem","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.100ee818.chunk.js","sourcesContent":["const actionTypes = {\r\n  LOAD_PHOTOS: \"LOAD_PHOTOS\",\r\n  SELECT_PHOTO: \"SELECT_PHOTO\",\r\n  SET_ERROR: \"SET_ERROR\",\r\n  TOGGLE_LIKE_PHOTO: \"TOGGLE_LIKE_PHOTO\",\r\n};\r\n\r\nexport default actionTypes;\r\n","import { ACCESS_KEY, SECRET_KEY, CALLBACK_URL } from \"./constants/constants\"\r\nimport Unsplash from \"unsplash-js\"\r\n\r\n\r\nexport const unsplash = new Unsplash({\r\n  accessKey: ACCESS_KEY,\r\n  secret: SECRET_KEY,\r\n  callbackUrl: CALLBACK_URL,\r\n\r\n});\r\n","export const NUMBER_OF_UPLOADED_PHOTOS = 10\r\n\r\nexport const ACCESS_KEY = \"KJOvYEYwLUqBqwO2elNDQlVbvpovCUF0gxnLu9Uql6M\";\r\n\r\nexport const SECRET_KEY = \"oY014JiJh1zZyhhd9ngAWmLMB0RDfOBbVEH2ghladaA\";\r\n\r\nexport const PHOTO_THEME = \"cats\";\r\n\r\nexport const CALLBACK_URL = \"https://pa-ram-pam-pam.github.io/auth\";\r\n\r\n// export const CALLBACK_URL = \"http://localhost:3000/auth\";","import actionTypes from \"../actionTypes/actionTypes\";\r\nimport { toJson } from \"unsplash-js\";\r\nimport { NUMBER_OF_UPLOADED_PHOTOS, PHOTO_THEME } from \"../constants/constants\";\r\nimport { unsplash } from \"../unsplash\";\r\n\r\nconst { LOAD_PHOTOS, SET_ERROR, SELECT_PHOTO, TOGGLE_LIKE_PHOTO } = actionTypes;\r\n\r\nexport const loadPhotos = () => {\r\n  return function (dispatch, getState) {\r\n    const counter = ++getState().counter;\r\n    unsplash.search\r\n      .photos(PHOTO_THEME, counter, NUMBER_OF_UPLOADED_PHOTOS)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        dispatch(createActionLoadPhotos(json));\r\n      })\r\n      .catch(function (err) {\r\n        dispatch(createActionSetError());\r\n      });\r\n  };\r\n};\r\n\r\nexport const createActionSelectPhoto = (pageY) => {\r\n  return {\r\n    type: SELECT_PHOTO,\r\n    pageY,\r\n  };\r\n};\r\n\r\nexport const createActionToggleLikePhoto = (id) => {\r\n  return {\r\n    type: TOGGLE_LIKE_PHOTO,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nconst createActionLoadPhotos = (json) => {\r\n  return {\r\n    type: LOAD_PHOTOS,\r\n    payload: json.results,\r\n  };\r\n};\r\n\r\nexport const createActionSetError = () => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: \"Проблема соединения с сервером, перезагрузите страницу\",\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getPhotos = (state) => state.photos;\r\n\r\nconst getPageY = (state) => state.pageY;\r\n\r\nexport const getPhotosReselected = createSelector (getPhotos, state => state)\r\n\r\nexport const getPageYReselected = createSelector (getPageY, state => state)\r\n\r\n","import React from \"react\";\r\n\r\nconst PhotoStatiscs = ({ photo }) => {\r\n  const { user: { name, links: { html: { authorLink } } }, created_at, likes } = photo;\r\n  // const { name } = user;\r\n  // const authorLink = user.links.html;\r\n  // const { created_at } = photo;\r\n  // const { likes } = photo;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Автор:\r\n        <a href={authorLink}>{name}</a>\r\n      </div>\r\n      <div>Дата: {created_at}</div>\r\n      <div>Лайков: {likes}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoStatiscs;\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport PhotoStatistics from \"../components/PhotoStatistics\";\r\n\r\nconst SmallPhoto = ({ photo, selectPhoto }) => {\r\n  const {\r\n    id,\r\n    description,\r\n    urls: { small: url },\r\n  } = photo;\r\n\r\n  const handlerOnClick = () => {\r\n    selectPhoto(window.pageYOffset); \r\n  }\r\n  return (\r\n    <div key={id}>\r\n      <Link\r\n        to={\"/view/\" + id}\r\n        onClick={handlerOnClick}\r\n      >\r\n        <img src={url} alt={description}></img>\r\n      </Link>\r\n      <PhotoStatistics photo={photo} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SmallPhoto","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadPhotos, createActionSelectPhoto } from \"../actionCreators/actionCreators\";\r\nimport { getPhotosReselected, getPageYReselected } from \"../selectors/selectors\";\r\nimport SmallPhoto from \"../components/SmallPhoto\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst BlockOfSmallPhotos = ({ photos, loadPhotos, createActionSelectPhoto, pageY }) => {\r\n\r\n  const handleScroll = (ev) => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    ) {\r\n      return;\r\n    }\r\n    ev.preventDefault();\r\n    loadPhotos();\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, pageY);\r\n  }, [pageY]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [handleScroll]);\r\n\r\n  const onClickHandler = (ev) => {\r\n    ev.preventDefault();\r\n    ev.target.blur();\r\n    loadPhotos();\r\n  };\r\n\r\n  if (photos.length === 0) { return (<Redirect to={\"/preauth\"} />) }\r\n  else {\r\n    return (\r\n      <div onScroll={loadPhotos}>\r\n        {photos.map((photo) => {\r\n          return (\r\n            <SmallPhoto key={photo.id} photo={photo} selectPhoto={createActionSelectPhoto} />\r\n          );\r\n        })}\r\n        <br />\r\n        <button onClickCapture={onClickHandler}>Загрузить еще фоточек</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    photos: getPhotosReselected(state),\r\n    pageY: getPageYReselected(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadPhotos: () => dispatch(loadPhotos()),\r\n    createActionSelectPhoto: (pageY) => dispatch(createActionSelectPhoto(pageY)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockOfSmallPhotos);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PhotoStatiscs from \"../components/PhotoStatistics\";\r\nimport { useParams, Redirect, Link } from \"react-router-dom\";\r\nimport { unsplash } from \"../unsplash\"\r\nimport { toJson } from \"unsplash-js\"\r\nimport { getPhotosReselected } from \"../selectors/selectors\";\r\nimport { createActionToggleLikePhoto } from \"../actionCreators/actionCreators\";\r\n\r\nconst BlockOfBigPhoto = ({ photos, createActionToggleLikePhoto }) => {\r\n\r\n\r\n  const { id } = useParams()\r\n  const photo = photos.find((item) => item.id === id)\r\n  const [liked, setLiked] = useState(photo?.liked_by_user)\r\n  if (photos.length === 0) { return (<Redirect to={\"/preauth\"} />) }  //это на случай если юзер зашел по ссылке напрямую без загрузки фотографий\r\n\r\n  const like = () => {\r\n    unsplash.photos.likePhoto(photo.id)\r\n      .then(toJson)\r\n      .then(() => {\r\n        createActionToggleLikePhoto(id)\r\n        setLiked(!liked)\r\n      });\r\n  }\r\n\r\n  const unlike = () => {\r\n    unsplash.photos.unlikePhoto(photo.id)\r\n      .then(toJson)\r\n      .then(() => {\r\n        createActionToggleLikePhoto(id)\r\n        setLiked(!liked)\r\n      });\r\n  }\r\n  let Button\r\n  (liked === false) ? Button = (<button onClick={like}>Поставить лайк</button>) : Button = (<button onClick={unlike}>Убрать лайк</button>)\r\n\r\n  const { description, urls: { regular: url } } = photo\r\n\r\n  return (\r\n    <div>\r\n      <h2>Большая фоточка</h2>\r\n      <PhotoStatiscs photo={photo} />\r\n      <div>\r\n      </div>\r\n      <div>\r\n        <img src={url} alt={description}></img>\r\n        <br />\r\n        {Button}\r\n      </div>\r\n      <Link to=\"/feed\"> Назад </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    photos: getPhotosReselected(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createActionToggleLikePhoto: (id) => dispatch(createActionToggleLikePhoto(id)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockOfBigPhoto);\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { unsplash } from \"../unsplash\"\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loadPhotos } from \"../actionCreators/actionCreators\";\r\nimport { getPhotosReselected } from \"../selectors/selectors\"\r\n\r\nconst Auth = ({ loadPhotos, photos }) => {\r\n\r\n\r\n  useEffect(() => {\r\n    const code = document.location.search.split(\"code=\")[1];\r\n    if (code) unsplash.auth.userAuthentication(code).then(res => res.json()).then(json => {\r\n      unsplash.auth.setBearerToken(json.access_token)\r\n      loadPhotos()\r\n    }\r\n    )\r\n  }, [loadPhotos])\r\n\r\n\r\n  if (photos.length !== 0) {\r\n    return (\r\n      <Redirect to={\"/feed\"} />\r\n    )\r\n  }\r\n  else { return null }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    photos: getPhotosReselected(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadPhotos: () => dispatch(loadPhotos()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import { unsplash } from \"../unsplash\"\r\n\r\n\r\nconst PreAutorization = () => {\r\n  const authenticationUrl = unsplash.auth.getAuthenticationUrl([\"public\", \"write_likes\"]);\r\n  document.location.assign(authenticationUrl);\r\n  return null\r\n}\r\nexport default PreAutorization;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ErrMessage = ({ errMessage }) => {\r\n  useEffect(() => {\r\n    console.log(\"рендер ошибок\");\r\n  })\r\n  return <>{errMessage}</>;\r\n};\r\n\r\nconst mapStateToProps = ({ errMessage }) => {\r\n  return {\r\n    errMessage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ErrMessage);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport BlockOfSmallPhotos from \"./BlockOfSmallPhotos\";\nimport BlockOfBigPhoto from \"./BlockOfBigPhoto\";\nimport Auth from \"./Auth\"\nimport PreAutorization from \"./PreAuthorization\"\nimport ErrMessage from \"./ErrMessage\";\n\nconst App = ({ errMessage }) => {\n  return (\n    <>\n      {errMessage ? (<ErrMessage />) : null}\n      <Router>\n        <Switch>\n          <Route path=\"/preauth\" component={PreAutorization} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/feed\" component={BlockOfSmallPhotos} />\n          <Route path=\"/view/:id\" component={BlockOfBigPhoto} />\n          <Redirect from=\"/\" to=\"/preauth\" />\n        </Switch>\n      </Router>\n    </>\n  );\n};\nconst mapStateToProps = ({ errMessage }) => {\n  return {\n    errMessage,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n\n{/* <HashRouter basename=\"/\" hashType=\"noslash\"> */ }","import actionTypes from \"../actionTypes/actionTypes\";\r\n\r\nconst reducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_PHOTOS:\r\n      const unatedArr = state.photos.concat(action.payload);\r\n      let { counter } = state;\r\n      return {\r\n        ...state,\r\n        photos: unatedArr,\r\n        counter: ++counter,\r\n        errMessage: null,\r\n      };\r\n\r\n    case actionTypes.SELECT_PHOTO:\r\n      return {\r\n        ...state,\r\n        pageY: action.pageY,\r\n      };\r\n\r\n    case actionTypes.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        errMessage: action.payload,\r\n      };\r\n\r\n    case actionTypes.TOGGLE_LIKE_PHOTO:\r\n      const newArr = [...state.photos]\r\n      const elem = newArr.find((item) => item.id === action.payload)\r\n\r\n      if (elem.liked_by_user === false) {\r\n        elem.liked_by_user = true;\r\n        elem.likes = ++elem.likes;\r\n      } else {\r\n        elem.liked_by_user = false;\r\n        elem.likes = --elem.likes;\r\n      }\r\n      return {\r\n        ...state,\r\n        photos: newArr,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/containers/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './app/reducers/reducers';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  photos: [],\n  counter: 0,\n  errMessage: null,\n  pageY: 0,\n};\n\nconst store = createStore(reducers, initialState, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}